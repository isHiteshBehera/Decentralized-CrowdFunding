var d=Object.defineProperty;var g=(s,a,t)=>a in s?d(s,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[a]=t;var e=(s,a,t)=>(g(s,typeof a!="symbol"?a+"":a,t),t);import{N as l,C,A as W,b1 as f,a as w,g as y,b as T,c as o,T as b}from"./index.a1beb9a2.js";import{C as R,a as S,G as E,b as A}from"./contract-appuri-33da16a0.browser.esm.5a15974a.js";import{C as B}from"./contract-interceptor-d7b164a7.browser.esm.f148037c.js";import{C as M,a as O}from"./contract-owner-a47803b3.browser.esm.4dfc91fd.js";import{C as v}from"./contract-platform-fee-2f530d4a.browser.esm.98634c4c.js";import{C as I}from"./contract-roles-9eddc064.browser.esm.e7afe2b4.js";import{C as P}from"./contract-sales-2626790f.browser.esm.9181f422.js";import{S as k}from"./erc-721-standard-553a6c6e.browser.esm.527a05a0.js";import{a as x}from"./erc-721-15f4d399.browser.esm.a6191ba2.js";import"./setErc20Allowance-03e90c71.browser.esm.baf96d2a.js";import"./QueryParams-cc5c6db2.browser.esm.6e2ea9e3.js";import"./index.ab72f119.js";import"./treeify.ddb219f4.js";import"./assertEnabled-4f69556a.browser.esm.6110ffc1.js";import"./drop-claim-conditions-fc7bd13b.browser.esm.8b0dae6b.js";const i=class extends k{constructor(t,r,n){let h=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},p=arguments.length>4?arguments[4]:void 0,m=arguments.length>5?arguments[5]:void 0,u=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new C(t,r,p,h,n);super(u,n,m);e(this,"mint",o(async t=>this.erc721.mint.prepare(t)));e(this,"mintTo",o(async(t,r)=>this.erc721.mintTo.prepare(t,r)));e(this,"mintBatch",o(async t=>this.erc721.mintBatch.prepare(t)));e(this,"mintBatchTo",o(async(t,r)=>this.erc721.mintBatchTo.prepare(t,r)));e(this,"burn",o(t=>this.erc721.burn.prepare(t)));this.abi=W.parse(p||[]),this.metadata=new R(this.contractWrapper,f,this.storage),this.app=new S(this.contractWrapper,this.metadata,this.storage),this.roles=new I(this.contractWrapper,i.contractRoles),this.royalties=new M(this.contractWrapper,this.metadata),this.sales=new P(this.contractWrapper),this.encoder=new w(this.contractWrapper),this.estimator=new E(this.contractWrapper),this.events=new A(this.contractWrapper),this.platformFees=new v(this.contractWrapper),this.interceptor=new B(this.contractWrapper),this.signature=new x(this.contractWrapper,this.storage),this.owner=new O(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async isTransferRestricted(){return!await this.contractWrapper.read("hasRole",[y("transfer"),T])}async getMintTransaction(t,r){return this.erc721.getMintTransaction(t,r)}async prepare(t,r,n){return b.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:n})}async call(t,r,n){return this.contractWrapper.call(t,r,n)}};let c=i;e(c,"contractRoles",l);export{c as NFTCollection};
